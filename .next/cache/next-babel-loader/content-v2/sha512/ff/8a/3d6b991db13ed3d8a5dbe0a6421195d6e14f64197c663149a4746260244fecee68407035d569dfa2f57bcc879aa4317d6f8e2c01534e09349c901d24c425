{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nvar _jsxFileName = \"/Users/g/Desktop/react-projects/first-next/pages/post.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\n\nconst Post = ({\n  id,\n  comments\n}) => {\n  const postComments = comments.map(comment => /*#__PURE__*/_createElement(Comment, _objectSpread(_objectSpread({}, comment), {}, {\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  })));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `This is post ${id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), postComments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\nconst Comment = ({\n  email,\n  body\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n    children: email\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: body\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n\nexport async function getServerSideProps({\n  query\n}) {\n  const {\n    id\n  } = query;\n  const res = await axios.get(`http://jsonplaceholder.typicode.com/comments?postId=${id}`);\n  const {\n    data\n  } = res;\n  return {\n    props: {\n      id: id,\n      comments: data\n    }\n  };\n}\nexport default Post;","map":{"version":3,"sources":["/Users/g/Desktop/react-projects/first-next/pages/post.js"],"names":["axios","Post","id","comments","postComments","map","comment","Comment","email","body","getServerSideProps","query","res","get","data","props"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,KAAsB;AACjC,QAAMC,YAAY,GAAGD,QAAQ,CAACE,GAAT,CAAcC,OAAD,iBAChC,eAAC,OAAD,kCAAaA,OAAb;AAAsB,IAAA,GAAG,EAAEA,OAAO,CAACJ,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADmB,CAArB;AAIA,sBACE;AAAA,4BACE;AAAA,gBAAM,gBAAeA,EAAG;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAXD;;AAaA,MAAMG,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBACd;AAAA,0BACE;AAAA,cAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,cAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAOA,OAAO,eAAeC,kBAAf,CAAkC;AAAEC,EAAAA;AAAF,CAAlC,EAA6C;AAClD,QAAM;AAAET,IAAAA;AAAF,MAASS,KAAf;AACA,QAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CACf,uDAAsDX,EAAG,EAD1C,CAAlB;AAGA,QAAM;AAAEY,IAAAA;AAAF,MAAWF,GAAjB;AAEA,SAAO;AAAEG,IAAAA,KAAK,EAAE;AAAEb,MAAAA,EAAE,EAAEA,EAAN;AAAUC,MAAAA,QAAQ,EAAEW;AAApB;AAAT,GAAP;AACD;AAED,eAAeb,IAAf","sourcesContent":["import axios from \"axios\";\n \nconst Post = ({ id, comments }) => {\n  const postComments = comments.map((comment) => (\n    <Comment {...comment} key={comment.id} />\n  ));\n \n  return (\n    <div>\n      <h1>{`This is post ${id}`}</h1>\n      {postComments}\n    </div>\n  );\n};\n \nconst Comment = ({ email, body }) => (\n  <div>\n    <h5>{email}</h5>\n    <p>{body}</p>\n  </div>\n);\n \nexport async function getServerSideProps({ query }) {\n  const { id } = query;\n  const res = await axios.get(\n    `http://jsonplaceholder.typicode.com/comments?postId=${id}`\n  );\n  const { data } = res;\n \n  return { props: { id: id, comments: data } };\n}\n \nexport default Post;"]},"metadata":{},"sourceType":"module"}
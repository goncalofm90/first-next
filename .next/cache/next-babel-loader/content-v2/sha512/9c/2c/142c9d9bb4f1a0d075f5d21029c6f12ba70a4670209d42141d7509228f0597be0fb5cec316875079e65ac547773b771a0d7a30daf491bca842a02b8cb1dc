{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/g/Desktop/react-projects/first-next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { createElement as _createElement } from \"react\";\n\nvar _jsxFileName = \"/Users/g/Desktop/react-projects/first-next/pages/post.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Post = function Post(_ref) {\n  var id = _ref.id,\n      comments = _ref.comments;\n  var postComments = comments.map(function (comment) {\n    return /*#__PURE__*/_createElement(Comment, _objectSpread(_objectSpread({}, comment), {}, {\n      key: comment.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 5\n      }\n    }));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is post \".concat(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this), postComments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Post;\n\nvar Comment = function Comment(_ref2) {\n  var email = _ref2.email,\n      body = _ref2.body;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, _this);\n};\n\n_c2 = Comment;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Comment\");","map":{"version":3,"sources":["/Users/g/Desktop/react-projects/first-next/pages/post.js"],"names":["Post","id","comments","postComments","map","comment","Comment","email","body"],"mappings":";;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,OAAsB;AAAA,MAAnBC,EAAmB,QAAnBA,EAAmB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACjC,MAAMC,YAAY,GAAGD,QAAQ,CAACE,GAAT,CAAa,UAACC,OAAD;AAAA,wBAChC,eAAC,OAAD,kCAAaA,OAAb;AAAsB,MAAA,GAAG,EAAEA,OAAO,CAACJ,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADgC;AAAA,GAAb,CAArB;AAIA,sBACE;AAAA,4BACE;AAAA,uCAAqBA,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGE,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CAXD;;KAAMH,I;;AAaN,IAAMM,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,MAAUC,IAAV,SAAUA,IAAV;AAAA,sBACd;AAAA,4BACE;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADc;AAAA,CAAhB;;MAAMF,O;;AAiBN,eAAeN,IAAf","sourcesContent":["import axios from \"axios\";\n \nconst Post = ({ id, comments }) => {\n  const postComments = comments.map((comment) => (\n    <Comment {...comment} key={comment.id} />\n  ));\n \n  return (\n    <div>\n      <h1>{`This is post ${id}`}</h1>\n      {postComments}\n    </div>\n  );\n};\n \nconst Comment = ({ email, body }) => (\n  <div>\n    <h5>{email}</h5>\n    <p>{body}</p>\n  </div>\n);\n \nexport async function getServerSideProps({ query }) {\n  const { id } = query;\n  const res = await axios.get(\n    `http://jsonplaceholder.typicode.com/comments?postId=${id}`\n  );\n  const { data } = res;\n \n  return { props: { id: id, comments: data } };\n}\n \nexport default Post;"]},"metadata":{},"sourceType":"module"}